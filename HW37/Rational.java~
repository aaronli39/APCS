/* 
   Aaron Li
   APCS1 pd8
   HW36 -- Be More Rational
   2017-11-20
*/ 

public class Rational { // class Rational
    private int _num; // stores numerator
    private int _denom; // stores denominator

    // Default constructor
    // Numerator is 0, denominator is 1 for default
    public Rational() {
	_num = 0;
	_denom = 1;
    }
    
    // Public constructor takes 2 input parameters: numerator and denominator.
    public Rational(int up, int down) { 
	this();
	if (_denom != 0) { // if _denom != 0, set instance vars to input values
	    _denom = down;
	    _num = up;
	} else { // otherwise, set numerator and denominator to inputs
	    System.out.println("You have entered an invalid denominator");
	}
    }

    // Returns greatest common denominator
    public static int gcd(int a, int b) {
	
    // toString method to stringify the numerator/denominator
    public String toString() {
	return (_num + " / " + _denom);
    }

    // returns an accurate value of the approximation of the number by using doubles
    public double floatValue() {
	return ((double) _num / _denom);
    }

    // Multiplies and modifies caller's numerator and denominator. Input is
    // unaffected.
    public void multiply(Rational inp) {
	this._num *= inp._num;
	this._denom *= inp._denom;
    }

    // Divides and modifies caller's instance variables. Input is unaffected.
    public void divide(Rational inp) {
	if (inp._denom != 0) {
	    _num /= inp._num;
	    _denom /= inp._denom;
	} else {
	    System.out.println("Divide by 0 error");
	}
    }
    
    // Main method for testing
    public static void main(String[] args) {
	Rational r = new Rational(2, 3); // new instance r
	Rational s = new Rational(1, 2); // new instance s
	r.multiply(s); // mulitplies r by s
	System.out.println(r._num); // numerator and denominator of r should change
	System.out.println(s._num); // numerator and denominator of s should not change
	Rational x = new Rational(1, 0); // test what happens when invalid denominator is inputted. Should return 0/1
	
    }
} // end class Rational
